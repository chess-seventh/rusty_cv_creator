name: Rust Tests & Coverage

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose

  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: cargo install cargo-nextest
      - name: Run nextests
        run: cargo nextest run --no-fail-fast
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: taiki-e/install-action@nextest

  # coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: dtolnay/rust-toolchain@stable
  #       with:
  #         components: llvm-tools-preview
  #     - uses: taiki-e/install-action@cargo-llvm-cov
  #     - uses: taiki-e/install-action@nextest
  #     - name: Collect coverage data
  #       run: cargo llvm-cov nextest

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install correct toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy --all-targets -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: Check formatting
        run: |
          cargo fmt --all -- --check

  cleanup-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: Install Cargo-Shear
        run: |
          cargo install cargo-shear
      - name: Check un-used dependenecies
        run: |
          cargo shear
